Vagrant.configure("2") do |config|
  config.vm.box = "kubuntu-24.04"

  PUBLIC_KEY_PATH = File.expand_path("~/.ssh/my_vagrant_key.pub")
  PUBLIC_SETUP_PATH = File.expand_path("setup.sh")

  # Define VM1
  config.vm.define "vm1" do |vm1|
    vm1.vm.provider "virtualbox" do |vb|
      vb.memory = "16384"
      vb.cpus = 6
      vb.gui = false
      vb.name = "kubuntu-vm1"
    end

    provision_script = <<-SHELL
    sudo apt-get update
    sudo apt-get install -y openjdk-17-jdk curl ca-certificates vim postgresql postgresql-contrib letsencrypt openssh-server

    sudo systemctl enable ssh
    sudo systemctl start ssh

    # Install Visual Studio Code
    curl -L "https://code.visualstudio.com/sha/download?build=stable&os=linux-deb-x64" -o vscode.deb
    sudo dpkg -i vscode.deb
    sudo apt-get install -f -y  # Install dependencies if needed

    RESPONSE_FILE1="/tmp/jira/response.varfile"
    RESPONSE_FILE2="/tmp/confluence/response.varfile"
    RESPONSE_FILE3="/tmp/bitbucket/response.varfile"

    sudo mkdir -p /tmp/jira /tmp/confluence /tmp/bitbucket

    cat <<EOF > $RESPONSE_FILE1
#backupJira$Boolean=true
app.install.service$Boolean=true
#existingInstallationDir=/opt/atlassian/jira
sys.adminRights$Boolean=true
sys.confirmedUpdateInstallationString=false
sys.languageId=en
sys.installationDir=/opt/atlassian/jira
executeLauncherAction$Boolean=false
EOF

    cat <<EOF > $RESPONSE_FILE2
#backupConfluence$Boolean=true
app.install.service$Boolean=true
#existingInstallationDir=/opt/atlassian/confluence
sys.adminRights$Boolean=true
sys.languageId=en
sys.installationDir=/opt/atlassian/confluence
sys.confirmedUpdateInstallationString=false
executeLauncherAction$Boolean=false
EOF

    cat <<EOF > $RESPONSE_FILE3
#backupBitbucket$Boolean=true
app.install.service$Boolean=true
#existingInstallationDir=/opt/atlassian/bitbucket
sys.adminRights$Boolean=true
sys.languageId=en
sys.installationDir=/opt/atlassian/bitbucket
sys.confirmedUpdateInstallationString=false
executeLauncherAction$Boolean=false
EOF

    declare -a urls=(
    "https://product-downloads.atlassian.com/software/jira/downloads/atlassian-jira-software-9.17.1-x64.bin"
    "https://product-downloads.atlassian.com/software/confluence/downloads/atlassian-confluence-8.9.4-x64.bin"
    "https://product-downloads.atlassian.com/software/bitbucket/downloads/atlassian-bitbucket-8.19.6-x64.bin"
    )

    for url in "${urls[@]}"; do
    filename=$(basename $url)
    curl -L $url -o $filename
    sudo chmod +x $filename

    if [[ $filename == *"jira"* ]]; then
        sudo ./$filename -q -varfile $RESPONSE_FILE1
    elif [[ $filename == *"confluence"* ]]; then
        sudo ./$filename -q -varfile $RESPONSE_FILE2
    elif [[ $filename == *"bitbucket"* ]]; then
        sudo ./$filename -q -varfile $RESPONSE_FILE3
    fi
    done

    # Set up PostgreSQL
    sudo apt-get install -f -y
    sudo systemctl start postgresql
    sudo systemctl enable postgresql

    DB_NAME1="jiradb"
    DB_USER1="jira"
    DB_PASS1="jira"

    DB_NAME2="confluencedb"
    DB_USER2="confluence"
    DB_PASS2="confluence"

    DB_NAME3="bitbucketdb"
    DB_USER3="bitbucket"
    DB_PASS3="bitbucket"

    sudo -i -u postgres psql -c "CREATE DATABASE $DB_NAME1;"
    sudo -i -u postgres psql -c "CREATE USER $DB_USER1 WITH ENCRYPTED PASSWORD '$DB_PASS1';"
    sudo -i -u postgres psql -c "GRANT ALL PRIVILEGES ON DATABASE $DB_NAME1 TO $DB_USER1;"
    sudo -i -u postgres psql -c "CREATE DATABASE $DB_NAME2;"
    sudo -i -u postgres psql -c "CREATE USER $DB_USER2 WITH ENCRYPTED PASSWORD '$DB_PASS2';"
    sudo -i -u postgres psql -c "GRANT ALL PRIVILEGES ON DATABASE $DB_NAME2 TO $DB_USER2;"
    sudo -i -u postgres psql -c "CREATE DATABASE $DB_NAME3;"
    sudo -i -u postgres psql -c "CREATE USER $DB_USER3 WITH ENCRYPTED PASSWORD '$DB_PASS3';"
    sudo -i -u postgres psql -c "GRANT ALL PRIVILEGES ON DATABASE $DB_NAME3 TO $DB_USER3;"
  SHELL
    vm1.vm.network "public_network", bridge: "enp6s0", use_dhcp_assigned_default_route: true
    vm1.vm.provision "file", source: PUBLIC_SETUP_PATH, destination: "/tmp/setup.sh"
    vm1.vm.provision "file", source: PUBLIC_KEY_PATH, destination: "/tmp/my_vagrant_key.pub"
    vm1.vm.provision "shell", inline: provision_script 
  end

  # Define VM2
  config.vm.define "vm2" do |vm2|
    vm2.vm.provider "virtualbox" do |vb|
      vb.memory = "6144"
      vb.cpus = 2
      vb.gui = false
      vb.name = "kubuntu-vm2"
      vb.customize ["modifyvm", :id, "--clipboard", "bidirectional"]
    end

    provision_script = <<-SHELL
    sudo apt-get update
    sudo apt-get install -y openjdk-17-jdk curl ca-certificates vim postgresql postgresql-contrib letsencrypt openssh-server

    sudo systemctl enable ssh
    sudo systemctl start ssh

    # Install Visual Studio Code
    curl -L "https://code.visualstudio.com/sha/download?build=stable&os=linux-deb-x64" -o vscode.deb
    sudo dpkg -i vscode.deb
    sudo apt-get install -f -y  # Install dependencies if needed
    sudo systemctl start postgresql
    sudo systemctl enable postgresql

    DB_NAME1="jiradb"
    DB_USER1="jira"
    DB_PASS1="jira"

    sudo -i -u postgres psql -c "CREATE DATABASE $DB_NAME1;"
    sudo -i -u postgres psql -c "CREATE USER $DB_USER1 WITH ENCRYPTED PASSWORD '$DB_PASS1';"
    sudo -i -u postgres psql -c "GRANT ALL PRIVILEGES ON DATABASE $DB_NAME1 TO $DB_USER1;"
  SHELL
    vm2.vm.network "public_network", bridge: "enp6s0", use_dhcp_assigned_default_route: true
    vm2.vm.provision "file", source: PUBLIC_SETUP_PATH, destination: "/tmp/setup.sh"
    vm2.vm.provision "file", source: PUBLIC_KEY_PATH, destination: "/tmp/my_vagrant_key.pub"
    vm2.vm.provision "shell", inline: provision_script 
  end
end