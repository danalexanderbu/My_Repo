# Copy server config with token to all servers except server 1 (this has token)
- name: Deploy RKE2 server Configuration
  become: true
  ansible.builtin.template:
    src: templates/rke2-server-config.j2
    dest: /etc/rancher/rke2/config.yaml
    owner: root
    group: root
    mode: '0644'
  when: inventory_hostname != groups['servers'][0]

# Ensure kubectl is copied and available on server1
- name: Check if kubectl is already present
  ansible.builtin.stat:
    path: /var/lib/rancher/rke2/bin/kubectl
  register: kubectl_stat
  when: inventory_hostname == groups['servers'][0]

- name: Remove existing kubectl if it is a file
  become: true
  ansible.builtin.file:
    path: /usr/bin/kubectl
    state: absent
  when:
    - inventory_hostname == groups['servers'][0]
    - kubectl_stat.stat.exists is defined and kubectl_stat.stat.exists
    - kubectl_stat.stat.isreg is defined and kubectl_stat.stat.isreg

- name: Ensure kubectl is linked to /usr/local/bin
  become: true
  ansible.builtin.file:
    src: /var/lib/rancher/rke2/bin/kubectl
    dest: /usr/bin/kubectl
    state: link
  when: inventory_hostname == groups['servers'][0]


- name: Wait for kubectl to be available in PATH
  ansible.builtin.wait_for:
    path: /usr/bin/kubectl
  when: inventory_hostname == groups['servers'][0]

# Keep checking the cluster API until it's functioning (deployed)
- name: Wait for cluster API to be ready (can take 5-10 mins depending on internet/hardware)
  become: true
  ansible.builtin.command:
    cmd: "/usr/bin/kubectl --kubeconfig /etc/rancher/rke2/rke2.yaml get nodes"
  register: kubectl_output
  until: kubectl_output.rc == 0
  retries: 120
  delay: 10
  changed_when: true
  when: inventory_hostname == groups['servers'][0]

  # Use kubectl to deploy kube-vip RBAC configuration
- name: Apply kube-vip RBAC configuration file
  become: true
  ansible.builtin.command:
    cmd: /usr/bin/kubectl --kubeconfig /etc/rancher/rke2/rke2.yaml apply -f https://kube-vip.io/manifests/rbac.yaml
  changed_when: true
  when: inventory_hostname == groups['servers'][0]

# Apply the kube-vip configration. Perhaps this can be added to the manifest folder initially
- name: Apply kube vip configuration file
  become: true
  ansible.builtin.command:
    cmd: kubectl --kubeconfig /etc/rancher/rke2/rke2.yaml apply -f https://raw.githubusercontent.com/kube-vip/kube-vip-cloud-provider/main/manifest/kube-vip-cloud-controller.yaml
  changed_when: true
  when: inventory_hostname == groups['servers'][0]

# Check that additional servers are restarted
- name: Ensure additional RKE2 servers are enabled and running
  become: true
  ansible.builtin.systemd:
    name: rke2-server
    enabled: true
    state: restarted
    daemon_reload: true
  when: inventory_hostname != groups['servers'][0]